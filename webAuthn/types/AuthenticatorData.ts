/**
 * Data provided by the authenticator about the environment in which the
 * authentication took place in
 *
 * @property {string} rpIDHash base64-encoded SHA256 hash of the RP ID used during authentication
 * @property {AuthenticatorDataFlags} flags Bitfield of flags representing the user and registration
 * @property {number} useCount Number of times the credential was used
 * @property {AttestedCredentialData} attestedCredentialData The credential created during registration, if applicable
 */
export type AuthenticatorData = {
  rpIDHash: string
  flags: AuthenticatorDataFlags
  useCount: number
  attestedCredentialData?: AttestedCredentialData
}

/**
 * Information about a credential
 *
 * @property {Buffer} authenticatorGuid A 128-bit identifier indicating the type and make of the authenticator
 * @property {string} credentialID The ID of this credential
 * @property {Buffer} credentialPubKey The public key generated by the authenticator
 */
export type AttestedCredentialData = {
  authenticatorGuid: Buffer
  credentialID: Buffer
  credentialPubKey: Buffer
}

/**
 * Possible flags provided by the authenticator
 *
 * Flags are a one-byte bitfield, bit positions can be referenced
 * [here](https://www.w3.org/TR/webauthn-2/#flags)
 */
export enum AuthenticatorDataFlags {
  none,
  userPresent = 1 << 0,
  userVerified = 1 << 2,
  backupEligible = 1 << 3,
  backupState = 1 << 4,
  attestedCredIncluded = 1 << 6,
  extensionDataIncluded = 1 << 7
}