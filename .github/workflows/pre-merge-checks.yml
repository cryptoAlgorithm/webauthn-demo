# Workflow to run unit tests and code coverage and deploy the test and
# and coverage report to GitHub Pages
name: Pre-Merge Checks

on:
  # Runs on pull request to main branch
  pull_request:
    branches: [master, main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pre-merge-checks"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  pre-merge-checks:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      #######################
      ## Dependencies
      #######################
      # Enable caching of dependencies
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install with npm if no cache hit
      - name: Install dependencies
        run: npm i .

      #######################
      ## Unit Tests
      #######################
      - name: Run tests with coverage
        env:
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          # URL to download MDS file
          MDS_URL: https://mds3.fidoalliance.org/
          # MDS cert CN must match this value
          MDS_HOST: mds.fidoalliance.org
          # URL to download root cert to verify MDS cert chain
          MDS_ROOT_CERT_URL: https://secure.globalsign.net/cacert/Root-R3.crt
          # Authenticator whitelist flag - set to false to disable whitelist i.e. allow all authenticators in MDS
          MDS_AUTH_WHITELIST: true
          # Write MDS json file to this location, if specified
          MDS_JSON_FILEPATH: /tmp/mds3.json
        run: npm test -- --coverage --collectCoverageFrom='**/*.{js,jsx,mjs,ts,tsx}' --collectCoverageFrom='!./coverage/**' --coverageProvider='v8'

      - name: Lint codebase
        run: npm run lint .

      - name: Check for vulnerable dependencies
        run: |
          npm audit --json | npx npm-audit-markdown
          cat npm-audit.md
